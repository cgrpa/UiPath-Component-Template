<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_blnUnitTestSuccess" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1467,4794</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Component Argument Validation Unit Test Template:&#xA;Author: Che Gamble&#xA;Version: 1.0&#xA;Date:  14/02/2022&#xA;&#xA;_____________________________________________________&#xA;&#xA;Component Name:  &lt;Component Name&gt;&#xA;Unit Test Case Number: XX&#xA;&#xA;Test Case Details:  &lt; Summary of unit test case&gt;&#xA;&#xA;Unit Test Release version: &#xA;Developer:&#xA;Date:&#xA;&#xA;Change History (if required):&#xA;Date               Developer                Details&#xA;--------------  --------------------  ------------------------------------------------------&#xA;xx/xx/2020      Developer Name      e.g. Initial development release, or change&#xA;" DisplayName="&lt;Component Name - Unit Test 01&gt;" sap:VirtualizedContainerService.HintSize="1477,4729" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strExpectedExceptionMessage" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="dctConfig" />
      <Variable x:TypeArguments="x:String" Name="strArgument" />
      <Variable x:TypeArguments="x:Boolean" Name="blnUnitTestSuccess" />
      <Variable x:TypeArguments="x:String" Name="strComponentName" />
      <Variable x:TypeArguments="x:Boolean" Name="blnVerboseLogging" />
      <Variable x:TypeArguments="x:Int32" Name="intUnitTestNumber" />
      <Variable x:TypeArguments="x:Boolean" Name="blnExist" />
      <Variable x:TypeArguments="x:Boolean" Name="blnSuccess" />
      <Variable x:TypeArguments="x:String" Name="strExceptionMessage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Initialise" sap:VirtualizedContainerService.HintSize="1435,613" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Assign unit test specific values" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Boolean">[blnUnitTestSuccess]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Boolean">[out_blnUnitTestSuccess]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <ui:MultipleAssign sap2010:Annotation.AnnotationText="Set Component Name under test&#xA;Set expected error mesage (else blank if no error expected)&#xA;Set Unit Test number = 1, 2, ..." DisplayName="Assign this test name, expected error message and defaults" sap:VirtualizedContainerService.HintSize="431,219" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strComponentName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">&lt;Component Under Test&gt;</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strExpectedExceptionMessage]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">&lt;Expected error message (all or unique part)&gt;</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intUnitTestNumber]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">1</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <ui:LogMessage DisplayName="Log Message Starting unit test X for component" sap:VirtualizedContainerService.HintSize="431,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Starting Unit Test: &quot; + intUnitTestNumber.ToString +&quot; for component: &quot; + strComponentName]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Set Up Input Arguments&#xA;&#xA;Retrieve and set variables for argument values to be passed to invoked workflow for test case.&#xA;&#xA;Prepare test environment." DisplayName="Given" sap:VirtualizedContainerService.HintSize="1435,946" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Fetch values from Config" sap:VirtualizedContainerService.HintSize="430,335" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow to fetch Config settings" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
            <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[dctConfig]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <Assign DisplayName="Assign blnVerboseLogging from Config" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_29">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[blnVerboseLogging]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[Convert.ToBoolean(dctConfig("VerboseLogging").ToString)]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Invoke any other necessary precursor workflows here." DisplayName="Prepare environment" sap:VirtualizedContainerService.HintSize="430.4,128.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Sequence>
      <ui:MultipleAssign sap2010:Annotation.AnnotationText="Add local variables here for mapping on workflow invoke, corresponding to unit test case.&#xA;&#xA;Verbose Logging is set to True by default regardless of Config value." DisplayName="Assign variables for argument mapping" sap:VirtualizedContainerService.HintSize="430.4,208" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Boolean">[blnVerboseLogging]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strArgument]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Invoke workflow component.&#xA;&#xA;Catch any exceptions and set exception.Message as strExceptionMessage." DisplayName="When" sap:VirtualizedContainerService.HintSize="1435.2,1020.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Invoke Component" sap:VirtualizedContainerService.HintSize="670.4,868" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <TryCatch.Try>
          <Flowchart DisplayName="Invoke Component" sap:VirtualizedContainerService.HintSize="633.6,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,126.4</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID2</x:Reference>
            </Flowchart.StartNode>
            <FlowDecision x:Name="__ReferenceID2" Condition="[blnVerboseLogging]" DisplayName="Verbose?" sap:VirtualizedContainerService.HintSize="70.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_47">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">264.8,126.4</av:Point>
                  <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
                  <av:PointCollection x:Key="TrueConnector">264.8,170 234.8,170 234.8,180 220,180</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">335.2,170 350,170 350,233.6 290,233.6 290,263.6</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">20,153.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">120,206.4 120,236.4 290,236.4 290,263.6</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log invoking component" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Info" Message="[strComponentName + &quot;, unit test: Invoking Component...&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID0">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">190,263.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" WorkflowFileName="{x:Null}" DisplayName="Invoke Component" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[dctConfig]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowDecision.False>
            </FlowDecision>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID0</x:Reference>
          </Flowchart>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="636.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Flowchart sap:VirtualizedContainerService.HintSize="633.6,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                    <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,116.4</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Flowchart.StartNode>
                  <x:Reference>__ReferenceID5</x:Reference>
                </Flowchart.StartNode>
                <FlowDecision x:Name="__ReferenceID5" Condition="[blnVerboseLogging]" DisplayName="Verbose?" sap:VirtualizedContainerService.HintSize="70.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_46">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">264.8,116.4</av:Point>
                      <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
                      <av:PointCollection x:Key="TrueConnector">264.8,160 234.8,160 234.8,170 200,170</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">335.2,160 360,160 360,230 300,230 300,260</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,143.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">100,196.4 100,226.4 300,226.4 300,260</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Exception Caught" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_40" Message="[strComponentName + &quot;, unit test: Caught exception: &quot; + exception.Message]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">168.8,260</av:Point>
                              <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign strExceptionMessage" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <x:Reference>__ReferenceID3</x:Reference>
                  </FlowDecision.False>
                </FlowDecision>
                <x:Reference>__ReferenceID4</x:Reference>
                <x:Reference>__ReferenceID3</x:Reference>
              </Flowchart>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Unit will check expected Exception behaviour.&#xA;&#xA;Unit will check Post-Conditions.&#xA;" DisplayName="Then - Post Conditions" sap:VirtualizedContainerService.HintSize="1435.2,1275.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart sap2010:Annotation.AnnotationText="All verification activities change blnUnitTestSuccess to either True or False. One failure will result in Unit failure." DisplayName="Check strExceptionMessage" sap:VirtualizedContainerService.HintSize="1393.6,668" sap2010:WorkflowViewState.IdRef="Flowchart_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">580,22.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">610,97.6 610,146.4</av:PointCollection>
            <x:Double x:Key="Width">1360</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Flowchart.StartNode>
          <x:Reference>__ReferenceID14</x:Reference>
        </Flowchart.StartNode>
        <FlowDecision x:Name="__ReferenceID14" Condition="[String.IsNullOrEmpty(strExceptionMessage)]" DisplayName="No Exception Caught?" sap:VirtualizedContainerService.HintSize="123.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_48">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">548.4,146.4</av:Point>
              <av:Size x:Key="ShapeSize">123.2,87.2</av:Size>
              <av:PointCollection x:Key="FalseConnector">671.6,190 850,190 850,246.4</av:PointCollection>
              <av:PointCollection x:Key="TrueConnector">548.4,190 330,190 330,236.4</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowDecision x:Name="__ReferenceID7" Condition="[String.IsNullOrEmpty(strExpectedExceptionMessage)]" DisplayName="No Exception Expected?" sap:VirtualizedContainerService.HintSize="132.8,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_56">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">263.6,236.4</av:Point>
                  <av:Size x:Key="ShapeSize">132.8,87.2</av:Size>
                  <av:PointCollection x:Key="FalseConnector">396.4,280 460,280 460,353.6</av:PointCollection>
                  <av:PointCollection x:Key="TrueConnector">263.6,280 240,280 240,353.6</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">140,353.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Log No Exception Verification Passed" Expression="True" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="VerifyExpression_3" OutputMessageFormat="[strComponentName + &quot;, unit test: Component passed Exception verification. Unit did not expect an exception and component did not throw an exception.&quot;]" Result="[blnUnitTestSuccess]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uta:VerifyExpression>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">360,353.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">460,353.6 460,353.6</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Log No Exception Verification Failed" Expression="False" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="VerifyExpression_4" OutputMessageFormat="[strComponentName + &quot;, Unit test: Exception verification failed. Unit expected an exception and no exception was thrown by invoked component.&quot;]" Result="[blnUnitTestSuccess]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uta:VerifyExpression>
                  <FlowStep.Next>
                    <x:Reference>__ReferenceID6</x:Reference>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowDecision x:Name="__ReferenceID9" Condition="[String.IsNullOrEmpty(strExpectedExceptionMessage)]" DisplayName="No Exception Expected?" sap:VirtualizedContainerService.HintSize="132.8,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_57">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">783.6,246.4</av:Point>
                  <av:Size x:Key="ShapeSize">132.8,87.2</av:Size>
                  <av:PointCollection x:Key="TrueConnector">783.6,290 680,290 680,353.6</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">916.4,290 1070,290 1070,346.4</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">580,353.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Log Exception Verification Failed" Expression="False" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="VerifyExpression_5" OutputMessageFormat="[strComponentName + &quot;, unit test: Unit test expected no exception, and got exception: &quot; + strExceptionMessage]" Result="[blnUnitTestSuccess]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uta:VerifyExpression>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowDecision x:Name="__ReferenceID11" Condition="[strExceptionMessage.ToLower.Contains(strExpectedExceptionMessage.ToLower)]" DisplayName="Expected exception message?" sap:VirtualizedContainerService.HintSize="160,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_58">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">990,346.4</av:Point>
                      <av:Size x:Key="ShapeSize">160,87.2</av:Size>
                      <av:PointCollection x:Key="TrueConnector">990,390 870,390 870,443.6</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">1150,390 1260,390 1260,443.6</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">770,443.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Log Exception Verification Passed" Expression="True" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="VerifyExpression_6" OutputMessageFormat="[strComponentName + &quot;, Unit test: Exception verification passed. Caught exception was expected exception.&quot;]" Result="[blnUnitTestSuccess]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </uta:VerifyExpression>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">1160,443.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Log Exception Verification Failed" Expression="False" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="VerifyExpression_7" OutputMessageFormat="[String.Format(&quot;{0}, Unit test: Exception verification failed. Caught exception: {1} was not expected exception {2}.&quot;, strComponentName, strExceptionMessage, strExpectedExceptionMessage)]" Result="[blnUnitTestSuccess]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </uta:VerifyExpression>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowDecision.False>
            </FlowDecision>
          </FlowDecision.False>
        </FlowDecision>
        <x:Reference>__ReferenceID7</x:Reference>
        <x:Reference>__ReferenceID8</x:Reference>
        <x:Reference>__ReferenceID6</x:Reference>
        <x:Reference>__ReferenceID9</x:Reference>
        <x:Reference>__ReferenceID10</x:Reference>
        <x:Reference>__ReferenceID11</x:Reference>
        <x:Reference>__ReferenceID12</x:Reference>
        <x:Reference>__ReferenceID13</x:Reference>
      </Flowchart>
      <Sequence sap2010:Annotation.AnnotationText="These can be data or application specific.&#xA;&#xA;All verification activities change blnUnitTestSuccess to either True or False. One failure will result in Unit failure." DisplayName="Check Post-Conditions" sap:VirtualizedContainerService.HintSize="1393.6,398.4" sap2010:WorkflowViewState.IdRef="Sequence_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <uta:VerifyControlAttribute AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Control Attribute" sap:VirtualizedContainerService.HintSize="711.2,143.2" sap2010:WorkflowViewState.IdRef="VerifyControlAttribute_1" Operator="Equality" OutputArgument="Exists" Result="[blnUnitTestSuccess]" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyControlAttribute.ActivityToTest>
            <ActivityAction>
              <ui:UiElementExists DisplayName="Element Exists - Test Element" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="UiElementExists_9">
                <ui:UiElementExists.Exists>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <VariableReference x:TypeArguments="x:Boolean">
                      <VariableReference.Variable>
                        <Variable x:TypeArguments="x:Boolean" x:Name="__ReferenceID15" Name="Exists" />
                      </VariableReference.Variable>
                    </VariableReference>
                  </OutArgument>
                </ui:UiElementExists.Exists>
                <ui:UiElementExists.Result>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <VariableReference x:TypeArguments="x:Boolean">
                      <VariableReference.Variable>
                        <Variable x:TypeArguments="x:Boolean" Name="Result" />
                      </VariableReference.Variable>
                    </VariableReference>
                  </OutArgument>
                </ui:UiElementExists.Result>
                <ui:UiElementExists.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="3e91586b-fd54-4047-8870-515507f3391f">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:UiElementExists.Target>
              </ui:UiElementExists>
            </ActivityAction>
          </uta:VerifyControlAttribute.ActivityToTest>
          <uta:VerifyControlAttribute.ArgumentsBridgeActivity>
            <ActivityFunc x:TypeArguments="x:Object">
              <uta:ArgumentsBridge sap2010:WorkflowViewState.IdRef="ArgumentsBridge_1">
                <uta:ArgumentsBridge.Input>
                  <InArgument x:TypeArguments="x:Object">
                    <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID15}" />
                  </InArgument>
                </uta:ArgumentsBridge.Input>
              </uta:ArgumentsBridge>
            </ActivityFunc>
          </uta:VerifyControlAttribute.ArgumentsBridgeActivity>
          <uta:VerifyControlAttribute.Expression>
            <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
          </uta:VerifyControlAttribute.Expression>
        </uta:VerifyControlAttribute>
        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" Expression="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression - Test Expression Verification" sap:VirtualizedContainerService.HintSize="711.2,62.4" sap2010:WorkflowViewState.IdRef="VerifyExpression_8" Result="[blnUnitTestSuccess]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
      </Sequence>
    </Sequence>
    <Assign DisplayName="Set output Unit Test Success" sap:VirtualizedContainerService.HintSize="1435.2,60" sap2010:WorkflowViewState.IdRef="Assign_28">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_blnUnitTestSuccess]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">[blnUnitTestSuccess]</InArgument>
      </Assign.Value>
    </Assign>
    <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="1435.2,62.4" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" OutputMessageFormat="[&quot;End of unit test: &quot; + strComponentName + &quot; Test passed: {Result}&quot;]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
      <uta:VerifyExpressionWithOperator.FirstExpression>
        <InArgument x:TypeArguments="x:Boolean">[out_blnUnitTestSuccess]</InArgument>
      </uta:VerifyExpressionWithOperator.FirstExpression>
      <uta:VerifyExpressionWithOperator.SecondExpression>
        <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
      </uta:VerifyExpressionWithOperator.SecondExpression>
    </uta:VerifyExpressionWithOperator>
    <ui:LogMessage DisplayName="Log Message End" sap:VirtualizedContainerService.HintSize="1435.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End of Unit Test: &quot; + strComponentName]" />
  </Sequence>
</Activity>